{"id":"speculod","consumes":["application/json"],"produces":["application/json"],"swagger":"2.0","info":{"description":"Chain speculod REST API","title":"HTTP API Console","contact":{"name":"speculod"},"version":"version not set"},"paths":{"/speculod.prediction.v1.Msg/CancelOrder":{"post":{"tags":["Msg"],"operationId":"SpeculodMsg_CancelOrder","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/speculod.prediction.v1.MsgCancelOrder"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.prediction.v1.MsgCancelOrderResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod.prediction.v1.Msg/CreateMarket":{"post":{"tags":["Msg"],"operationId":"SpeculodMsg_CreateMarket","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/speculod.prediction.v1.MsgCreateMarket"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.prediction.v1.MsgCreateMarketResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod.prediction.v1.Msg/FillOrder":{"post":{"tags":["Msg"],"operationId":"SpeculodMsg_FillOrder","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/speculod.prediction.v1.MsgFillOrder"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.prediction.v1.MsgFillOrderResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod.prediction.v1.Msg/PostOrder":{"post":{"tags":["Msg"],"operationId":"SpeculodMsg_PostOrder","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/speculod.prediction.v1.MsgPostOrder"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.prediction.v1.MsgPostOrderResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod.prediction.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"operationId":"SpeculodMsg_UpdateParams","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/speculod.prediction.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.prediction.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod.reputation.v1.Msg/AdjustScore":{"post":{"tags":["Msg"],"summary":"AdjustScore allows an authorized module or governance to adjust a user's reputation score.","operationId":"SpeculodMsg_AdjustScore","parameters":[{"description":"MsgAdjustScore is the request type for adjusting a user's reputation score.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/speculod.reputation.v1.MsgAdjustScore"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.reputation.v1.MsgAdjustScoreResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod.reputation.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"SpeculodMsg_UpdateParamsMixin11","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/speculod.reputation.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.reputation.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod.settlement.v1.Msg/CommitVote":{"post":{"tags":["Msg"],"operationId":"SpeculodMsg_CommitVote","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/speculod.settlement.v1.MsgCommitVote"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.settlement.v1.MsgCommitVoteResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod.settlement.v1.Msg/FinalizeOutcome":{"post":{"tags":["Msg"],"operationId":"SpeculodMsg_FinalizeOutcome","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/speculod.settlement.v1.MsgFinalizeOutcome"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.settlement.v1.MsgFinalizeOutcomeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod.settlement.v1.Msg/RevealVote":{"post":{"tags":["Msg"],"operationId":"SpeculodMsg_RevealVote","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/speculod.settlement.v1.MsgRevealVote"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.settlement.v1.MsgRevealVoteResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod.settlement.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"operationId":"SpeculodMsg_UpdateParamsMixin15","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/speculod.settlement.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.settlement.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod.speculod.v1.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"SpeculodMsg_UpdateParamsMixin21","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/speculod.speculod.v1.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.speculod.v1.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod/prediction/v1/markets":{"get":{"tags":["Query"],"summary":"Markets queries all markets.","operationId":"SpeculodQuery_Markets","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.prediction.v1.QueryMarketsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod/prediction/v1/markets/{market_id}":{"get":{"tags":["Query"],"summary":"Market queries a specific market by ID.","operationId":"SpeculodQuery_Market","parameters":[{"type":"string","format":"uint64","description":"market_id defines the unique identifier of the market.","name":"market_id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.prediction.v1.QueryMarketResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod/prediction/v1/markets/{market_id}/outcomes/{outcome_index}/orderbook":{"get":{"tags":["Query"],"summary":"OrderBook queries the order book for a market and outcome.","operationId":"SpeculodQuery_OrderBook","parameters":[{"type":"string","format":"uint64","description":"market_id defines the unique identifier of the market.","name":"market_id","in":"path","required":true},{"type":"integer","format":"int64","description":"outcome_index defines the outcome index.","name":"outcome_index","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.prediction.v1.QueryOrderBookResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod/prediction/v1/markets/{market_id}/outcomes/{outcome_index}/orders":{"get":{"tags":["Query"],"summary":"Orders queries all orders for a market and outcome.","operationId":"SpeculodQuery_Orders","parameters":[{"type":"string","format":"uint64","description":"market_id defines the unique identifier of the market.","name":"market_id","in":"path","required":true},{"type":"integer","format":"int64","description":"outcome_index defines the outcome index.","name":"outcome_index","in":"path","required":true},{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.prediction.v1.QueryOrdersResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod/prediction/v1/orders/{order_id}":{"get":{"tags":["Query"],"summary":"Order queries a specific order by ID.","operationId":"SpeculodQuery_Order","parameters":[{"type":"string","format":"uint64","description":"order_id defines the unique identifier of the order.","name":"order_id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.prediction.v1.QueryOrderResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod/prediction/v1/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"SpeculodQuery_Params","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.prediction.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod/prediction/v1/users/{user}/orders":{"get":{"tags":["Query"],"summary":"UserOrders queries all orders for a specific user.","operationId":"SpeculodQuery_UserOrders","parameters":[{"type":"string","description":"user defines the user address.","name":"user","in":"path","required":true},{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.prediction.v1.QueryUserOrdersResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod/reputation/v1/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"SpeculodQuery_ParamsMixin9","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.reputation.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod/settlement/v1/commits/{market_id}":{"get":{"tags":["Query"],"summary":"Commits queries all vote commits for a market.","operationId":"SpeculodQuery_Commits","parameters":[{"type":"string","format":"uint64","name":"market_id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.settlement.v1.QueryCommitsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod/settlement/v1/outcome/{market_id}":{"get":{"tags":["Query"],"summary":"Outcome queries the final outcome for a market.","operationId":"SpeculodQuery_Outcome","parameters":[{"type":"string","format":"uint64","name":"market_id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.settlement.v1.QueryOutcomeResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod/settlement/v1/params":{"get":{"tags":["Query"],"summary":"Params queries the parameters of the module.","operationId":"SpeculodQuery_ParamsMixin14","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.settlement.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod/settlement/v1/reveals/{market_id}":{"get":{"tags":["Query"],"summary":"Reveals queries all vote reveals for a market.","operationId":"SpeculodQuery_Reveals","parameters":[{"type":"string","format":"uint64","name":"market_id","in":"path","required":true}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.settlement.v1.QueryRevealsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/speculod/speculod/v1/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"SpeculodQuery_ParamsMixin20","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/speculod.speculod.v1.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}}},"definitions":{"cosmos.base.query.v1beta1.PageRequest":{"description":"message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }","type":"object","title":"PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:","properties":{"count_total":{"description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","type":"boolean"},"key":{"description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","type":"string","format":"byte"},"limit":{"description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","type":"string","format":"uint64"},"offset":{"description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","type":"string","format":"uint64"},"reverse":{"description":"reverse is set to true if results are to be returned in the descending order.","type":"boolean"}}},"cosmos.base.query.v1beta1.PageResponse":{"description":"PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }","type":"object","properties":{"next_key":{"description":"next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results.","type":"string","format":"byte"},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"}}},"cosmos.base.v1beta1.Coin":{"description":"Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto.","type":"object","properties":{"amount":{"type":"string"},"denom":{"type":"string"}}},"google.protobuf.Any":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}},"google.rpc.Status":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"details":{"type":"array","items":{"type":"object","$ref":"#/definitions/google.protobuf.Any"}},"message":{"type":"string"}}},"speculod.prediction.v1.MsgCancelOrder":{"type":"object","properties":{"creator":{"type":"string"},"order_id":{"type":"string","format":"uint64"}}},"speculod.prediction.v1.MsgCancelOrderResponse":{"type":"object","properties":{"status":{"type":"string"}}},"speculod.prediction.v1.MsgCreateMarket":{"type":"object","title":"Define MsgCreateMarket, MsgPostOrder, MsgCancelOrder, MsgFillOrder messages here","properties":{"creator":{"type":"string"},"deadline":{"type":"string","format":"int64"},"group_id":{"type":"string"},"initial_pool":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"outcomes":{"type":"array","items":{"type":"string"}},"question":{"type":"string"}}},"speculod.prediction.v1.MsgCreateMarketResponse":{"type":"object","properties":{"market_id":{"type":"string","format":"uint64"},"status":{"type":"string"}}},"speculod.prediction.v1.MsgFillOrder":{"type":"object","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"filler":{"type":"string"},"order_id":{"type":"string","format":"uint64"}}},"speculod.prediction.v1.MsgFillOrderResponse":{"type":"object","properties":{"status":{"type":"string"},"trades":{"type":"array","items":{"type":"object","$ref":"#/definitions/speculod.prediction.v1.Trade"}}}},"speculod.prediction.v1.MsgPostOrder":{"type":"object","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"creator":{"type":"string"},"market_id":{"type":"string","format":"uint64"},"outcome_index":{"type":"integer","format":"int64"},"price":{"type":"string","title":"Price as string (e.g., \"0.5\")"},"side":{"type":"string","title":"\"BUY\" or \"SELL\""}}},"speculod.prediction.v1.MsgPostOrderResponse":{"type":"object","properties":{"order_id":{"type":"string","format":"uint64"},"status":{"type":"string"},"trades":{"type":"array","items":{"type":"object","$ref":"#/definitions/speculod.prediction.v1.Trade"}}}},"speculod.prediction.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"params defines the module parameters to update.\n\nNOTE: All parameters must be supplied.","$ref":"#/definitions/speculod.prediction.v1.Params"}}},"speculod.prediction.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"speculod.prediction.v1.Order":{"type":"object","title":"Order represents a buy or sell order in the order book","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"created_at":{"type":"string","format":"int64"},"creator":{"type":"string"},"filled_amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"id":{"type":"string","format":"uint64"},"market_id":{"type":"string","format":"uint64"},"outcome_index":{"type":"integer","format":"int64"},"price":{"type":"string","title":"Price as string (e.g., \"0.5\")"},"side":{"$ref":"#/definitions/speculod.prediction.v1.OrderSide"},"status":{"$ref":"#/definitions/speculod.prediction.v1.OrderStatus"}}},"speculod.prediction.v1.OrderBook":{"type":"object","title":"OrderBook represents the order book for a specific market and outcome","properties":{"asks":{"type":"array","title":"Sorted by price ASC, then time ASC","items":{"type":"object","$ref":"#/definitions/speculod.prediction.v1.Order"}},"bids":{"type":"array","title":"Sorted by price DESC, then time ASC","items":{"type":"object","$ref":"#/definitions/speculod.prediction.v1.Order"}},"market_id":{"type":"string","format":"uint64"},"outcome_index":{"type":"integer","format":"int64"}}},"speculod.prediction.v1.OrderSide":{"type":"string","title":"OrderSide represents whether an order is a buy or sell","default":"ORDER_SIDE_UNSPECIFIED","enum":["ORDER_SIDE_UNSPECIFIED","ORDER_SIDE_BUY","ORDER_SIDE_SELL"]},"speculod.prediction.v1.OrderStatus":{"type":"string","title":"OrderStatus represents the current status of an order","default":"ORDER_STATUS_UNSPECIFIED","enum":["ORDER_STATUS_UNSPECIFIED","ORDER_STATUS_OPEN","ORDER_STATUS_PARTIALLY_FILLED","ORDER_STATUS_FILLED","ORDER_STATUS_CANCELLED"]},"speculod.prediction.v1.Params":{"description":"Params defines the parameters for the module.","type":"object"},"speculod.prediction.v1.PredictionMarket":{"description":"PredictionMarket defines the PredictionMarket message.","type":"object","properties":{"created_at":{"type":"string","format":"int64"},"creator":{"type":"string"},"deadline":{"type":"string","format":"int64"},"group_id":{"type":"string"},"id":{"type":"string","format":"uint64"},"outcome_pools":{"type":"array","items":{"type":"string"}},"outcomes":{"type":"array","items":{"type":"string"}},"question":{"type":"string"},"status":{"type":"string"},"total_pool":{"type":"string","format":"int64"}}},"speculod.prediction.v1.QueryMarketResponse":{"description":"QueryMarketResponse is response type for the Query/Market RPC method.","type":"object","properties":{"market":{"description":"market holds the requested market.","$ref":"#/definitions/speculod.prediction.v1.PredictionMarket"}}},"speculod.prediction.v1.QueryMarketsResponse":{"description":"QueryMarketsResponse is response type for the Query/Markets RPC method.","type":"object","properties":{"markets":{"description":"markets holds all the markets.","type":"array","items":{"type":"object","$ref":"#/definitions/speculod.prediction.v1.PredictionMarket"}},"pagination":{"description":"pagination defines the pagination in the response.","$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"speculod.prediction.v1.QueryOrderBookResponse":{"description":"QueryOrderBookResponse is response type for the Query/OrderBook RPC method.","type":"object","properties":{"order_book":{"description":"order_book holds the requested order book.","$ref":"#/definitions/speculod.prediction.v1.OrderBook"}}},"speculod.prediction.v1.QueryOrderResponse":{"description":"QueryOrderResponse is response type for the Query/Order RPC method.","type":"object","properties":{"order":{"description":"order holds the requested order.","$ref":"#/definitions/speculod.prediction.v1.Order"}}},"speculod.prediction.v1.QueryOrdersResponse":{"description":"QueryOrdersResponse is response type for the Query/Orders RPC method.","type":"object","properties":{"orders":{"description":"orders holds all the orders.","type":"array","items":{"type":"object","$ref":"#/definitions/speculod.prediction.v1.Order"}},"pagination":{"description":"pagination defines the pagination in the response.","$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"speculod.prediction.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/speculod.prediction.v1.Params"}}},"speculod.prediction.v1.QueryUserOrdersResponse":{"description":"QueryUserOrdersResponse is response type for the Query/UserOrders RPC method.","type":"object","properties":{"orders":{"description":"orders holds all the orders for the user.","type":"array","items":{"type":"object","$ref":"#/definitions/speculod.prediction.v1.Order"}},"pagination":{"description":"pagination defines the pagination in the response.","$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"speculod.prediction.v1.Trade":{"type":"object","title":"Trade represents a completed trade","properties":{"amount":{"$ref":"#/definitions/cosmos.base.v1beta1.Coin"},"buyer":{"type":"string"},"market_id":{"type":"string","format":"uint64"},"outcome_index":{"type":"integer","format":"int64"},"price":{"type":"string","title":"Price as string"},"seller":{"type":"string"},"timestamp":{"type":"string","format":"int64"},"trade_id":{"type":"string","format":"uint64"}}},"speculod.reputation.v1.MsgAdjustScore":{"description":"MsgAdjustScore is the request type for adjusting a user's reputation score.","type":"object","properties":{"address":{"description":"The address whose reputation is being adjusted.","type":"string"},"adjustment":{"description":"The amount to adjust the score by (positive or negative integer).","type":"string","format":"int64"},"authority":{"description":"The authority or module making the adjustment (must be authorized).","type":"string"},"group_id":{"description":"The group in which the reputation is being adjusted.","type":"string"}}},"speculod.reputation.v1.MsgAdjustScoreResponse":{"description":"MsgAdjustScoreResponse is the response type for MsgAdjustScore.","type":"object"},"speculod.reputation.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"params defines the module parameters to update.\n\nNOTE: All parameters must be supplied.","$ref":"#/definitions/speculod.reputation.v1.Params"}}},"speculod.reputation.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"speculod.reputation.v1.Params":{"description":"Params defines the parameters for the module.","type":"object"},"speculod.reputation.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/speculod.reputation.v1.Params"}}},"speculod.settlement.v1.MsgCommitVote":{"type":"object","title":"CommitVote allows a user to commit their vote using a hash","properties":{"commitment":{"type":"string","title":"e.g. hash(vote + nonce)"},"creator":{"type":"string"},"market_id":{"type":"string","format":"uint64"}}},"speculod.settlement.v1.MsgCommitVoteResponse":{"type":"object"},"speculod.settlement.v1.MsgFinalizeOutcome":{"type":"object","title":"FinalizeOutcome can be triggered after the reveal phase to resolve the market","properties":{"creator":{"type":"string"},"market_id":{"type":"string","format":"uint64"}}},"speculod.settlement.v1.MsgFinalizeOutcomeResponse":{"type":"object"},"speculod.settlement.v1.MsgRevealVote":{"type":"object","title":"RevealVote allows a user to reveal their vote with the original value and nonce","properties":{"creator":{"type":"string"},"market_id":{"type":"string","format":"uint64"},"nonce":{"type":"string"},"vote":{"type":"string"}}},"speculod.settlement.v1.MsgRevealVoteResponse":{"type":"object"},"speculod.settlement.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"params defines the module parameters to update.\n\nNOTE: All parameters must be supplied.","$ref":"#/definitions/speculod.settlement.v1.Params"}}},"speculod.settlement.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"speculod.settlement.v1.Params":{"description":"Params defines the parameters for the module.","type":"object"},"speculod.settlement.v1.QueryCommitsResponse":{"description":"QueryCommitsResponse is response type for the Query/Commits RPC method.","type":"object","properties":{"commits":{"type":"array","items":{"type":"object","$ref":"#/definitions/speculod.settlement.v1.VoteCommit"}}}},"speculod.settlement.v1.QueryOutcomeResponse":{"description":"QueryOutcomeResponse is response type for the Query/Outcome RPC method.","type":"object","properties":{"outcome":{"type":"string"}}},"speculod.settlement.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/speculod.settlement.v1.Params"}}},"speculod.settlement.v1.QueryRevealsResponse":{"description":"QueryRevealsResponse is response type for the Query/Reveals RPC method.","type":"object","properties":{"reveals":{"type":"array","items":{"type":"object","$ref":"#/definitions/speculod.settlement.v1.VoteReveal"}}}},"speculod.settlement.v1.VoteCommit":{"description":"VoteCommit defines the VoteCommit message.","type":"object","properties":{"commitment":{"type":"string"},"market_id":{"type":"string","format":"uint64"},"voter":{"type":"string"}}},"speculod.settlement.v1.VoteReveal":{"description":"VoteReveal defines the VoteReveal message.","type":"object","properties":{"market_id":{"type":"string","format":"uint64"},"nonce":{"type":"string"},"vote":{"type":"string"},"voter":{"type":"string"}}},"speculod.speculod.v1.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"params defines the module parameters to update.\n\nNOTE: All parameters must be supplied.","$ref":"#/definitions/speculod.speculod.v1.Params"}}},"speculod.speculod.v1.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"speculod.speculod.v1.Params":{"description":"Params defines the parameters for the module.","type":"object"},"speculod.speculod.v1.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/speculod.speculod.v1.Params"}}}},"tags":[{"name":"Query"},{"name":"Msg"}]}